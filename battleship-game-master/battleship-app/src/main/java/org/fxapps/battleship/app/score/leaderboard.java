package org.fxapps.battleship.app.score;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;

public class leaderboard implements Serializable {
    private ArrayList<Integer> scores;

    public leaderboard(){
        ObjectInputStream input;
        try{
            input = new ObjectInputStream(new FileInputStream("D:/dung/HUST/20212/OOP/game/battleship-java-oop/battleship-game-master/battleship-app/src/main/resources/score/scores.ser"));
            scores = (ArrayList<Integer>) input.readObject();
        }catch (IOException e){
            scores = new ArrayList<Integer>(10);
        }catch (ClassNotFoundException e){
            System.err.println("Classes do not match.  You are not using a file generated by this program");
            System.exit(1);
        }
    }

    public void add(int score){
        if(scores.size()==0){
            scores.add(score);
        }else{
            int index=0;
            for(int i=0;i<scores.size();i++){
                index=i;
                if(scores.get(i).compareTo(score)>0){
                    if(i==scores.size()-1)
                        index++;
                    continue;
                }else
                    break;
            }
            if(index<5)
                scores.add(index,score);
        }
        try{
            ObjectOutputStream output = new ObjectOutputStream(new FileOutputStream("D:/dung/HUST/20212/OOP/game/battleship-java-oop/battleship-game-master/battleship-app/src/main/resources/score/scores.ser"));
            output.writeObject(scores);
            output.close();
        }catch (IOException e){
            System.err.println("Error opening/writing to file, may not have write permission in current directory");
            e.printStackTrace(); // so you can see what went wrong
            System.exit(1);
        }
    }
    public String display(int index) {
        if (scores.size() > 0 && scores.size()<index-1) {
            String output = "";
            output += scores.get(index).toString();
            return output;
        }else{
            return "0";
        }
    }
}
